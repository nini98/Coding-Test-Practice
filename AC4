#include <iostream>
#include <deque>

using namespace std;

int main()
{
    int i,N, flag = 1;
    string command, index, tmp = "", result = "";
    int index_num;
    deque <string> dq;

    cin >> N;

    while(N--){
        cin >> command;
        cin >> index_num;
        cin >> index;
        dq.clear();
        tmp.clear();
        flag = 1;

        for(i = 0; i<index.length(); i++){
            if(index[i] != '[' && index[i] != ']' && index[i] != ','){
                tmp += index[i];
            }
            else{
                if(!tmp.empty()){
                    dq.push_back(tmp);
                    tmp.clear();
                }
            }
        }

        for(i = 0; i<command.length(); i++){
            if(command[i] == 'R'){flag *= -1;}
            else{
                if( dq.empty()){
                    result += "error\n";
                    flag = 0;
                    break;
                }
                else if(flag == 1){dq.pop_front();}
                else{dq.pop_back();}
            }
        }

        if(flag != 0)
        {
            result += "[";
            if(flag == 1){
                for(i = 0; i<dq.size(); i++){
                    result += dq[i];
                    if(i != dq.size()-1)
                        result += ", ";
                }
            }
            else{
                for(i = dq.size()-1; i>=0; i--){
                    result += dq[i];

                    if(i != 0)
                        result += ", ";
                }

            }
            result += "]\n";
        }
    }
    for(i = 0; i<result.length(); i++)
        cout << result[i];

    return 0;
}
