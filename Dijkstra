#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <utility>
#include <vector>
#include <queue>

#define INF 999999
#define V_MAX 20000
#define E_MAX 30000

using namespace std;

vector <pair<int, int> > graph[V_MAX];
int dist[E_MAX];

void dijkstra(int start){
    int current, next, i;
    queue < int > qu;
    qu.push(start);

    while(!qu.empty()){
        current = qu.front();
        qu.pop();

        for(i = 0; i<graph[current].size(); i++){
            next = graph[current][i].first;
            dist[next] = min(dist[next], dist[current] + graph[current][i].second);
            qu.push(next);
        }
    }
}

int main()
{
    int V, E, K, u, v, w, i;

    scanf("%d %d", &V, &E);
    scanf("%d", &K);

    for(i = 0; i<=V; i++)
        dist[i] = INF;

    dist[K] = 0;

    for(i = 0; i<E; i++){
        scanf("%d %d %d", &u, &v, &w);
        graph[u].push_back(make_pair(v,w));
    }
    dijkstra(K);

    for(i = 1; i<=V; i++){
        if(dist[i] == INF)
            printf("INF\n");
        else
            printf("%d\n", dist[i]);
    }
    return 0;
}
